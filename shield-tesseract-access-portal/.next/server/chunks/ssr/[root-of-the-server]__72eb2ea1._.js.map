{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/saksham/OneDrive/Desktop/Tesseract/shield-tesseract-access-portal/src/visual-edits/VisualEditsMessenger.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\n\"use client\";\r\n\r\nimport { useEffect, useState, useRef } from \"react\";\r\n\r\nexport const CHANNEL = \"ORCHIDS_HOVER_v1\" as const;\r\nconst VISUAL_EDIT_MODE_KEY = \"orchids_visual_edit_mode\" as const;\r\nconst FOCUSED_ELEMENT_KEY = \"orchids_focused_element\" as const;\r\n\r\n// Deduplicate helper for high-frequency traffic (HIT / FOCUS_MOVED / SCROLL)\r\n// -----------------------------------------------------------------------------\r\nlet _orchidsLastMsg = \"\";\r\nconst postMessageDedup = (data: any) => {\r\n  try {\r\n    const key = JSON.stringify(data);\r\n    if (key === _orchidsLastMsg) return; // identical – drop\r\n    _orchidsLastMsg = key;\r\n  } catch {\r\n    // if stringify fails, fall through\r\n  }\r\n  window.parent.postMessage(data, \"*\");\r\n};\r\n\r\nexport type ParentToChild =\r\n  | { type: typeof CHANNEL; msg: \"POINTER\"; x: number; y: number }\r\n  | { type: typeof CHANNEL; msg: \"VISUAL_EDIT_MODE\"; active: boolean }\r\n  | { type: typeof CHANNEL; msg: \"SCROLL\"; dx: number; dy: number }\r\n  | { type: typeof CHANNEL; msg: \"CLEAR_INLINE_STYLES\"; elementId: string }\r\n  | {\r\n      type: typeof CHANNEL;\r\n      msg: \"PREVIEW_FONT\";\r\n      elementId: string;\r\n      fontFamily: string;\r\n    }\r\n  | {\r\n      type: typeof CHANNEL;\r\n      msg: \"RESIZE_ELEMENT\";\r\n      elementId: string;\r\n      width: number;\r\n      height: number;\r\n    }\r\n  | {\r\n      type: typeof CHANNEL;\r\n      msg: \"SHOW_ELEMENT_HOVER\";\r\n      elementId: string | null;\r\n    };\r\n\r\nexport type ChildToParent =\r\n  | {\r\n      type: typeof CHANNEL;\r\n      msg: \"HIT\";\r\n      id: string | null;\r\n      tag: string | null;\r\n      rect: { top: number; left: number; width: number; height: number } | null;\r\n    }\r\n  | {\r\n      type: typeof CHANNEL;\r\n      msg: \"ELEMENT_CLICKED\";\r\n      id: string | null;\r\n      tag: string | null;\r\n      rect: { top: number; left: number; width: number; height: number };\r\n      clickPosition: { x: number; y: number };\r\n      isEditable?: boolean;\r\n      currentStyles?: {\r\n        fontSize?: string;\r\n        color?: string;\r\n        fontWeight?: string;\r\n        fontStyle?: string;\r\n        textDecoration?: string;\r\n        textAlign?: string;\r\n        lineHeight?: string;\r\n        letterSpacing?: string;\r\n        paddingLeft?: string;\r\n        paddingRight?: string;\r\n        paddingTop?: string;\r\n        paddingBottom?: string;\r\n        marginLeft?: string;\r\n        marginRight?: string;\r\n        marginTop?: string;\r\n        marginBottom?: string;\r\n        backgroundColor?: string;\r\n        backgroundImage?: string;\r\n        borderRadius?: string;\r\n        fontFamily?: string;\r\n        opacity?: string;\r\n        display?: string;\r\n        flexDirection?: string;\r\n        alignItems?: string;\r\n        justifyContent?: string;\r\n        gap?: string;\r\n      };\r\n      className?: string;\r\n      src?: string;\r\n    }\r\n  | { type: typeof CHANNEL; msg: \"SCROLL_STARTED\" }\r\n  | { type: typeof CHANNEL; msg: \"SCROLL_STOPPED\" }\r\n  | {\r\n      type: typeof CHANNEL;\r\n      msg: \"TEXT_CHANGED\";\r\n      id: string;\r\n      oldText: string;\r\n      newText: string;\r\n      filePath: string;\r\n      line: number;\r\n      column: number;\r\n    }\r\n  | {\r\n      type: typeof CHANNEL;\r\n      msg: \"STYLE_CHANGED\";\r\n      id: string;\r\n      styles: Record<string, string>;\r\n      filePath: string;\r\n      line: number;\r\n      column: number;\r\n    }\r\n  | {\r\n      type: typeof CHANNEL;\r\n      msg: \"STYLE_BLUR\";\r\n      id: string;\r\n      styles: Record<string, string>;\r\n      filePath: string;\r\n      line: number;\r\n      column: number;\r\n      className: string;\r\n    }\r\n  | {\r\n      type: typeof CHANNEL;\r\n      msg: \"IMAGE_BLUR\";\r\n      id: string;\r\n      oldSrc: string;\r\n      newSrc: string;\r\n      filePath: string;\r\n      line: number;\r\n      column: number;\r\n    }\r\n  | {\r\n      type: typeof CHANNEL;\r\n      msg: \"FOCUS_MOVED\";\r\n      id: string;\r\n      rect: { top: number; left: number; width: number; height: number };\r\n    }\r\n  | { type: typeof CHANNEL; msg: \"VISUAL_EDIT_MODE_ACK\"; active: boolean }\r\n  | { type: typeof CHANNEL; msg: \"VISUAL_EDIT_MODE_RESTORED\"; active: boolean };\r\n\r\ntype Box = null | { top: number; left: number; width: number; height: number };\r\n\r\nconst BOX_PADDING = 4; // Pixels to expand the box on each side\r\n\r\n// Helper to check if element can be made contentEditable\r\nconst isTextEditable = (element: HTMLElement): boolean => {\r\n  const tagName = element.tagName.toLowerCase();\r\n  // Elements that typically contain text and can be made contentEditable\r\n  const editableTags = [\r\n    \"p\",\r\n    \"h1\",\r\n    \"h2\",\r\n    \"h3\",\r\n    \"h4\",\r\n    \"h5\",\r\n    \"h6\",\r\n    \"span\",\r\n    \"div\",\r\n    \"li\",\r\n    \"td\",\r\n    \"th\",\r\n    \"label\",\r\n    \"a\",\r\n    \"button\",\r\n  ];\r\n\r\n  // Check if it's already contentEditable or an input/textarea\r\n  if (\r\n    element.contentEditable === \"true\" ||\r\n    tagName === \"input\" ||\r\n    tagName === \"textarea\"\r\n  ) {\r\n    return true;\r\n  }\r\n\r\n  // Allow editing if element contains text and is an editable tag\r\n  // Only allow editing if element has at most 1 child OR has direct text content\r\n  if (editableTags.includes(tagName) && element.textContent?.trim()) {\r\n    // Check if element has direct text nodes (not just text from children)\r\n    const hasDirectText = Array.from(element.childNodes).some(\r\n      (node) => node.nodeType === Node.TEXT_NODE && node.textContent?.trim()\r\n    );\r\n\r\n    // Allow editing if:\r\n    // 1. Element has no children (pure text element)\r\n    // 2. Element has 1 or fewer children AND has direct text content\r\n    if (\r\n      element.childElementCount === 0 ||\r\n      (element.childElementCount <= 1 && hasDirectText)\r\n    ) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\n// Helper to extract only text nodes from an element (excluding child element text)\r\nconst extractDirectTextContent = (element: HTMLElement): string => {\r\n  let text = \"\";\r\n  for (const node of element.childNodes) {\r\n    if (node.nodeType === Node.TEXT_NODE) {\r\n      text += node.textContent || \"\";\r\n    }\r\n  }\r\n  return text;\r\n};\r\n\r\n// Helper to parse data-orchids-id to extract file path, line, and column\r\nconst parseOrchidsId = (\r\n  orchidsId: string\r\n): { filePath: string; line: number; column: number } | null => {\r\n  // Format: \"filepath:line:column\"\r\n  const parts = orchidsId.split(\":\");\r\n  if (parts.length < 3) return null;\r\n\r\n  // The file path might contain colons, so we need to handle that\r\n  const column = parseInt(parts.pop() || \"0\");\r\n  const line = parseInt(parts.pop() || \"0\");\r\n  const filePath = parts.join(\":\"); // Rejoin the remaining parts as the file path\r\n\r\n  if (isNaN(line) || isNaN(column)) return null;\r\n\r\n  return { filePath, line, column };\r\n};\r\n\r\n// Helper to get current styles of an element (including inline styles)\r\nconst getCurrentStyles = (\r\n  element: HTMLElement\r\n): {\r\n  fontSize?: string;\r\n  color?: string;\r\n  fontWeight?: string;\r\n  fontStyle?: string;\r\n  textDecoration?: string;\r\n  textAlign?: string;\r\n  lineHeight?: string;\r\n  letterSpacing?: string;\r\n  paddingLeft?: string;\r\n  paddingRight?: string;\r\n  paddingTop?: string;\r\n  paddingBottom?: string;\r\n  marginLeft?: string;\r\n  marginRight?: string;\r\n  marginTop?: string;\r\n  marginBottom?: string;\r\n  backgroundColor?: string;\r\n  backgroundImage?: string;\r\n  borderRadius?: string;\r\n  fontFamily?: string;\r\n  opacity?: string;\r\n  display?: string;\r\n  flexDirection?: string;\r\n  alignItems?: string;\r\n  justifyContent?: string;\r\n  gap?: string;\r\n} => {\r\n  const computed = window.getComputedStyle(element);\r\n\r\n  // Helper to normalize values and provide defaults\r\n  const normalizeValue = (value: string, property: string): string => {\r\n    // Handle background color - if it's transparent or rgba(0,0,0,0), return \"transparent\"\r\n    if (property === \"backgroundColor\") {\r\n      if (\r\n        value === \"rgba(0, 0, 0, 0)\" ||\r\n        value === \"rgb(0, 0, 0, 0)\" ||\r\n        value === \"transparent\" ||\r\n        value === \"\"\r\n      ) {\r\n        return \"transparent\";\r\n      }\r\n    }\r\n\r\n    // Handle background image - if none, return \"none\"\r\n    if (property === \"backgroundImage\" && (value === \"none\" || value === \"\")) {\r\n      return \"none\";\r\n    }\r\n\r\n    // Handle text decoration - if none, return \"none\"\r\n    if (property === \"textDecoration\") {\r\n      // Some browsers return complex values like \"none solid rgb(0, 0, 0)\"\r\n      if (value.includes(\"none\") || value === \"\") {\r\n        return \"none\";\r\n      }\r\n    }\r\n\r\n    // Handle font style - if normal, return \"normal\"\r\n    if (property === \"fontStyle\" && (value === \"normal\" || value === \"\")) {\r\n      return \"normal\";\r\n    }\r\n\r\n    // Handle font weight - normalize to standard values\r\n    if (property === \"fontWeight\") {\r\n      const weight = parseInt(value);\r\n      if (!isNaN(weight)) {\r\n        return String(weight);\r\n      }\r\n      return value || \"400\";\r\n    }\r\n\r\n    // Handle opacity - if 1, return \"1\"\r\n    if (property === \"opacity\" && (value === \"1\" || value === \"\")) {\r\n      return \"1\";\r\n    }\r\n\r\n    // Handle spacing values (padding/margin) - if 0px, return \"0\"\r\n    if (\r\n      (property.includes(\"padding\") || property.includes(\"margin\")) &&\r\n      (value === \"0px\" || value === \"0\")\r\n    ) {\r\n      return \"0\";\r\n    }\r\n\r\n    // Handle border radius - if 0px, return \"0\"\r\n    if (property === \"borderRadius\" && (value === \"0px\" || value === \"0\")) {\r\n      return \"0\";\r\n    }\r\n\r\n    // Handle letter spacing - if normal, return \"normal\"\r\n    if (\r\n      property === \"letterSpacing\" &&\r\n      (value === \"normal\" || value === \"0px\")\r\n    ) {\r\n      return \"normal\";\r\n    }\r\n\r\n    // Handle gap - if normal, return \"normal\"\r\n    if (property === \"gap\" && (value === \"normal\" || value === \"0px\")) {\r\n      return \"normal\";\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  return {\r\n    fontSize: normalizeValue(computed.fontSize, \"fontSize\"),\r\n    color: normalizeValue(computed.color, \"color\"),\r\n    fontWeight: normalizeValue(computed.fontWeight, \"fontWeight\"),\r\n    fontStyle: normalizeValue(computed.fontStyle, \"fontStyle\"),\r\n    textDecoration: normalizeValue(computed.textDecoration, \"textDecoration\"),\r\n    textAlign: normalizeValue(computed.textAlign, \"textAlign\"),\r\n    lineHeight: normalizeValue(computed.lineHeight, \"lineHeight\"),\r\n    letterSpacing: normalizeValue(computed.letterSpacing, \"letterSpacing\"),\r\n    paddingLeft: normalizeValue(computed.paddingLeft, \"paddingLeft\"),\r\n    paddingRight: normalizeValue(computed.paddingRight, \"paddingRight\"),\r\n    paddingTop: normalizeValue(computed.paddingTop, \"paddingTop\"),\r\n    paddingBottom: normalizeValue(computed.paddingBottom, \"paddingBottom\"),\r\n    marginLeft: normalizeValue(computed.marginLeft, \"marginLeft\"),\r\n    marginRight: normalizeValue(computed.marginRight, \"marginRight\"),\r\n    marginTop: normalizeValue(computed.marginTop, \"marginTop\"),\r\n    marginBottom: normalizeValue(computed.marginBottom, \"marginBottom\"),\r\n    backgroundColor: normalizeValue(\r\n      computed.backgroundColor,\r\n      \"backgroundColor\"\r\n    ),\r\n    backgroundImage: normalizeValue(\r\n      computed.backgroundImage,\r\n      \"backgroundImage\"\r\n    ),\r\n    borderRadius: normalizeValue(computed.borderRadius, \"borderRadius\"),\r\n    fontFamily: normalizeValue(computed.fontFamily, \"fontFamily\"),\r\n    opacity: normalizeValue(computed.opacity, \"opacity\"),\r\n    display: normalizeValue(computed.display, \"display\"),\r\n    flexDirection: normalizeValue(computed.flexDirection, \"flexDirection\"),\r\n    alignItems: normalizeValue(computed.alignItems, \"alignItems\"),\r\n    justifyContent: normalizeValue(computed.justifyContent, \"justifyContent\"),\r\n    gap: normalizeValue(computed.gap, \"gap\"),\r\n  };\r\n};\r\n\r\n// Normalize image src for comparison (handles Next.js optimization wrappers)\r\nconst normalizeImageSrc = (input: string): string => {\r\n  if (!input) return \"\";\r\n  try {\r\n    const url = new URL(input, window.location.origin);\r\n    // Handle Next.js <Image> optimization wrapper\r\n    if (url.pathname === \"/_next/image\") {\r\n      const real = url.searchParams.get(\"url\");\r\n      if (real) return decodeURIComponent(real);\r\n    }\r\n    return url.href; // absolute form\r\n  } catch {\r\n    return input;\r\n  }\r\n};\r\n\r\n// Helper to wrap multiline text only when it contains line breaks\r\nconst wrapMultiline = (text: string): string => {\r\n  if (text.includes(\"\\n\")) {\r\n    const escaped = text.replace(/\\n/g, \"\\\\n\");\r\n    // Wrap in {` ... `} so JSX will interpret it as a template literal\r\n    return `{\\`${escaped}\\`}`;\r\n  }\r\n  return text;\r\n};\r\n\r\nexport default function HoverReceiver() {\r\n  const [hoverBox, setHoverBox] = useState<Box>(null);\r\n  const [hoverBoxes, setHoverBoxes] = useState<Box[]>([]);\r\n  const [focusBox, setFocusBox] = useState<Box>(null);\r\n  const [focusedElementId, setFocusedElementId] = useState<string | null>(null);\r\n  const [isVisualEditMode, setIsVisualEditMode] = useState(() => {\r\n    // Initialize from localStorage if available\r\n    if (typeof window !== \"undefined\") {\r\n      const stored = localStorage.getItem(VISUAL_EDIT_MODE_KEY);\r\n      return stored === \"true\";\r\n    }\r\n    return false;\r\n  });\r\n  const [isResizing, setIsResizing] = useState(false);\r\n  const [resizeHandle, setResizeHandle] = useState<string | null>(null);\r\n  const [resizeStart, setResizeStart] = useState<{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n  } | null>(null);\r\n  const [isScrolling, setIsScrolling] = useState(false);\r\n\r\n  // Tag labels for hover and focus overlays\r\n  const [hoverTag, setHoverTag] = useState<string | null>(null);\r\n  const [focusTag, setFocusTag] = useState<string | null>(null);\r\n  const isResizingRef = useRef(false);\r\n  const lastHitElementRef = useRef<HTMLElement | null>(null);\r\n  const lastHitIdRef = useRef<string | null>(null);\r\n  const focusedElementRef = useRef<HTMLElement | null>(null);\r\n  const isVisualEditModeRef = useRef(false);\r\n  const scrollTimeoutRef = useRef<number | null>(null);\r\n  const originalContentRef = useRef<string>(\"\");\r\n  const originalSrcRef = useRef<string>(\"\"); // track original img src\r\n  const focusedImageElementRef = useRef<HTMLImageElement | null>(null); // track the actual img element\r\n  const editingElementRef = useRef<HTMLElement | null>(null);\r\n  const wasEditableRef = useRef<boolean>(false);\r\n  const styleElementRef = useRef<HTMLStyleElement | null>(null);\r\n  const originalStylesRef = useRef<Record<string, string>>({});\r\n  const appliedStylesRef = useRef<Map<string, Record<string, string>>>(\r\n    new Map()\r\n  );\r\n  const hasStyleChangesRef = useRef<boolean>(false);\r\n  const lastClickTimeRef = useRef<number>(0);\r\n  const pendingCleanupRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  // Cache of loaded fonts\r\n  const loadedFontFamilies = useRef<Set<string>>(new Set());\r\n  // Map of elementId that already has a persistent font set\r\n  const persistentFontMap = useRef<Map<string, string>>(new Map());\r\n  // Timeout refs for clearing persistent font map\r\n  const persistentFontTimeouts = useRef<Map<string, number>>(new Map());\r\n\r\n  // Keep ref in sync with state and persist to localStorage\r\n  useEffect(() => {\r\n    isVisualEditModeRef.current = isVisualEditMode;\r\n    // Persist to localStorage\r\n    if (typeof window !== \"undefined\") {\r\n      localStorage.setItem(VISUAL_EDIT_MODE_KEY, String(isVisualEditMode));\r\n    }\r\n  }, [isVisualEditMode]);\r\n\r\n  // On mount, notify parent if visual edit mode was restored from localStorage\r\n  useEffect(() => {\r\n    if (isVisualEditMode) {\r\n      // Send acknowledgement to parent that visual edit mode is active\r\n      // This will sync the parent's state with our restored state\r\n      window.parent.postMessage(\r\n        { type: CHANNEL, msg: \"VISUAL_EDIT_MODE_ACK\", active: true },\r\n        \"*\"\r\n      );\r\n\r\n      // Also send a special message to indicate this was restored from localStorage\r\n      window.parent.postMessage(\r\n        { type: CHANNEL, msg: \"VISUAL_EDIT_MODE_RESTORED\", active: true },\r\n        \"*\"\r\n      );\r\n\r\n      // Restore focused element after a short delay to ensure DOM is ready\r\n      setTimeout(() => {\r\n        if (typeof window !== \"undefined\") {\r\n          // Restore focused element\r\n          const focusedData = localStorage.getItem(FOCUSED_ELEMENT_KEY);\r\n          if (focusedData) {\r\n            try {\r\n              const { id } = JSON.parse(focusedData);\r\n              const element = document.querySelector(\r\n                `[data-orchids-id=\"${id}\"]`\r\n              ) as HTMLElement;\r\n\r\n              if (element) {\r\n                // Simulate a click on the element to restore focus\r\n                const rect = element.getBoundingClientRect();\r\n                const clickEvent = new MouseEvent(\"click\", {\r\n                  clientX: rect.left + rect.width / 2,\r\n                  clientY: rect.top + rect.height / 2,\r\n                  bubbles: true,\r\n                  cancelable: true,\r\n                });\r\n                element.dispatchEvent(clickEvent);\r\n              }\r\n            } catch {\r\n              // Ignore parsing errors\r\n            }\r\n          }\r\n        }\r\n      }, 500); // Wait 500ms for DOM to be fully ready\r\n    }\r\n  }, []); // Run only on mount\r\n\r\n  // Helper function to expand box dimensions\r\n  const expandBox = (rect: DOMRect): Box => ({\r\n    top: rect.top - BOX_PADDING,\r\n    left: rect.left - BOX_PADDING,\r\n    width: rect.width + BOX_PADDING * 2,\r\n    height: rect.height + BOX_PADDING * 2,\r\n  });\r\n\r\n  // Helper to update focus box position\r\n  const updateFocusBox = () => {\r\n    if (focusedElementRef.current) {\r\n      const r = focusedElementRef.current.getBoundingClientRect();\r\n      setFocusBox(expandBox(r));\r\n    }\r\n  };\r\n\r\n  // Add global styles for contentEditable elements\r\n  useEffect(() => {\r\n    if (isVisualEditMode && !styleElementRef.current) {\r\n      const style = document.createElement(\"style\");\r\n      style.textContent = `\r\n        [contenteditable=\"true\"]:focus {\r\n          outline: none !important;\r\n          box-shadow: none !important;\r\n          border-color: inherit !important;\r\n        }\r\n        [contenteditable=\"true\"] {\r\n          cursor: text !important;\r\n        }\r\n        /* Prevent the default blue highlight on contenteditable */\r\n        [contenteditable=\"true\"]::selection {\r\n          background-color: rgba(59, 130, 246, 0.3);\r\n        }\r\n        [contenteditable=\"true\"]::-moz-selection {\r\n          background-color: rgba(59, 130, 246, 0.3);\r\n        }\r\n        /* Prevent child elements from being editable */\r\n        [contenteditable=\"true\"] [contenteditable=\"false\"] {\r\n          user-select: none !important;\r\n          -webkit-user-select: none !important;\r\n          -moz-user-select: none !important;\r\n          -ms-user-select: none !important;\r\n          opacity: 0.7 !important;\r\n          cursor: default !important;\r\n        }\r\n        /* Ensure protected elements can't be selected */\r\n        [data-orchids-protected=\"true\"] {\r\n          user-select: none !important;\r\n          -webkit-user-select: none !important;\r\n          -moz-user-select: none !important;\r\n          -ms-user-select: none !important;\r\n        }\r\n      `;\r\n      document.head.appendChild(style);\r\n      styleElementRef.current = style;\r\n    } else if (!isVisualEditMode && styleElementRef.current) {\r\n      styleElementRef.current.remove();\r\n      styleElementRef.current = null;\r\n    }\r\n\r\n    return () => {\r\n      if (styleElementRef.current) {\r\n        styleElementRef.current.remove();\r\n        styleElementRef.current = null;\r\n      }\r\n    };\r\n  }, [isVisualEditMode]);\r\n\r\n  // Helper to make only text nodes editable and protect child elements\r\n  const protectChildElements = (element: HTMLElement) => {\r\n    // Make all child elements non-editable\r\n    const childElements = element.querySelectorAll(\"*\");\r\n    childElements.forEach((child) => {\r\n      const childEl = child as HTMLElement;\r\n      childEl.contentEditable = \"false\";\r\n      // Add a data attribute to mark protected elements\r\n      childEl.setAttribute(\"data-orchids-protected\", \"true\");\r\n      // Only prevent text selection within the child elements when parent is being edited\r\n      // But still allow pointer events for hovering and clicking\r\n      childEl.style.userSelect = \"none\";\r\n      childEl.style.webkitUserSelect = \"none\";\r\n      // Don't set pointerEvents to none - we want to allow hover and click\r\n    });\r\n  };\r\n\r\n  // Helper to restore child elements after editing\r\n  const restoreChildElements = (element: HTMLElement) => {\r\n    const protectedElements = element.querySelectorAll(\r\n      '[data-orchids-protected=\"true\"]'\r\n    );\r\n    protectedElements.forEach((child) => {\r\n      const childEl = child as HTMLElement;\r\n      childEl.removeAttribute(\"contenteditable\");\r\n      childEl.removeAttribute(\"data-orchids-protected\");\r\n      // Restore original styles\r\n      childEl.style.userSelect = \"\";\r\n      childEl.style.webkitUserSelect = \"\";\r\n    });\r\n  };\r\n\r\n  // Handle text changes and send to parent\r\n  const handleTextChange = (element: HTMLElement) => {\r\n    // Double-check this is still the editing element to avoid stale closures\r\n    if (element !== editingElementRef.current) {\r\n      console.warn(\"Attempting to handle text change for non-editing element\");\r\n      return;\r\n    }\r\n\r\n    // Get the orchids ID from the element to ensure we're working with the right one\r\n    const orchidsId = element.getAttribute(\"data-orchids-id\");\r\n    if (!orchidsId) return;\r\n\r\n    // For elements with children, only extract direct text content\r\n    let newText: string;\r\n    let oldText: string;\r\n\r\n    if (element.childElementCount > 0) {\r\n      // Element has children - only track direct text nodes\r\n      newText = extractDirectTextContent(element);\r\n      // We need to compare against the original direct text content\r\n      // Since originalContentRef stores the full text, we need to handle this differently\r\n      oldText = originalContentRef.current;\r\n    } else {\r\n      // No children - use innerText to preserve line breaks\r\n      newText = element.innerText || element.textContent || \"\";\r\n      oldText = originalContentRef.current;\r\n    }\r\n\r\n    if (newText !== oldText) {\r\n      const parsed = parseOrchidsId(orchidsId);\r\n      if (!parsed) return;\r\n\r\n      // Send text change message to parent\r\n      const msg: ChildToParent = {\r\n        type: CHANNEL,\r\n        msg: \"TEXT_CHANGED\",\r\n        id: orchidsId,\r\n        oldText: wrapMultiline(oldText),\r\n        newText: wrapMultiline(newText),\r\n        filePath: parsed.filePath,\r\n        line: parsed.line,\r\n        column: parsed.column,\r\n      };\r\n\r\n      postMessageDedup(msg);\r\n\r\n      // Update the original content reference\r\n      originalContentRef.current = newText;\r\n    }\r\n  };\r\n\r\n  // Handle style changes and send to parent\r\n  const handleStyleChange = (\r\n    element: HTMLElement,\r\n    styles: Record<string, string>\r\n  ) => {\r\n    const orchidsId = element.getAttribute(\"data-orchids-id\");\r\n    if (!orchidsId) return;\r\n\r\n    const parsed = parseOrchidsId(orchidsId);\r\n    if (!parsed) return;\r\n\r\n    // Find ALL elements with the same orchids ID\r\n    const allMatchingElements = document.querySelectorAll(\r\n      `[data-orchids-id=\"${orchidsId}\"]`\r\n    ) as NodeListOf<HTMLElement>;\r\n\r\n    // Apply styles to ALL matching elements for visual feedback\r\n    allMatchingElements.forEach((el) => {\r\n      Object.entries(styles).forEach(([property, value]) => {\r\n        // Convert camelCase to kebab-case for CSS property names\r\n        const cssProp = property.replace(/([A-Z])/g, \"-$1\").toLowerCase();\r\n\r\n        // Handle special cases for default values\r\n        let finalValue = value;\r\n\r\n        // If backgroundColor is being set to transparent, use transparent keyword\r\n        if (\r\n          property === \"backgroundColor\" &&\r\n          (value === \"transparent\" ||\r\n            value === \"rgba(0, 0, 0, 0)\" ||\r\n            value === \"rgb(0, 0, 0, 0)\")\r\n        ) {\r\n          finalValue = \"transparent\";\r\n        }\r\n\r\n        // If removing styles (setting to default), remove the property\r\n        if (\r\n          (property === \"backgroundColor\" && finalValue === \"transparent\") ||\r\n          (property === \"backgroundImage\" && value === \"none\") ||\r\n          (property === \"textDecoration\" && value === \"none\") ||\r\n          (property === \"fontStyle\" && value === \"normal\") ||\r\n          (property === \"opacity\" && value === \"1\") ||\r\n          ((property.includes(\"padding\") || property.includes(\"margin\")) &&\r\n            value === \"0\") ||\r\n          (property === \"borderRadius\" && value === \"0\") ||\r\n          (property === \"letterSpacing\" && value === \"normal\") ||\r\n          (property === \"gap\" && value === \"normal\")\r\n        ) {\r\n          // Remove the property to let the stylesheet value show through\r\n          el.style.removeProperty(cssProp);\r\n        } else {\r\n          // Apply with !important so it overrides existing rules\r\n          el.style.setProperty(cssProp, finalValue, \"important\");\r\n        }\r\n      });\r\n    });\r\n\r\n    // Store the applied styles\r\n    const existingStyles = appliedStylesRef.current.get(orchidsId) || {};\r\n    appliedStylesRef.current.set(orchidsId, { ...existingStyles, ...styles });\r\n    hasStyleChangesRef.current = true;\r\n\r\n    // Update the focus box after style change\r\n    requestAnimationFrame(() => {\r\n      updateFocusBox();\r\n    });\r\n\r\n    // Don't send to parent yet - wait for blur\r\n  };\r\n\r\n  // Send style changes on blur\r\n  const handleStyleBlur = (element: HTMLElement) => {\r\n    if (!hasStyleChangesRef.current) return;\r\n\r\n    const orchidsId = element.getAttribute(\"data-orchids-id\");\r\n    if (!orchidsId) return;\r\n\r\n    const parsed = parseOrchidsId(orchidsId);\r\n    if (!parsed) return;\r\n\r\n    const appliedStyles = appliedStylesRef.current.get(orchidsId);\r\n    if (!appliedStyles || Object.keys(appliedStyles).length === 0) return;\r\n\r\n    // Get className for breakpoint detection\r\n    const className = element.getAttribute(\"class\") || \"\";\r\n\r\n    // Send style blur message to parent for Tailwind conversion\r\n    const msg: ChildToParent = {\r\n      type: CHANNEL,\r\n      msg: \"STYLE_BLUR\",\r\n      id: orchidsId,\r\n      styles: appliedStyles,\r\n      className,\r\n      filePath: parsed.filePath,\r\n      line: parsed.line,\r\n      column: parsed.column,\r\n    };\r\n\r\n    postMessageDedup(msg);\r\n\r\n    // Reset style changes flag\r\n    hasStyleChangesRef.current = false;\r\n  };\r\n\r\n  // Flush image src updates on blur/focus change\r\n  const flushImageSrcChange = () => {\r\n    // Use the stored image element reference if available\r\n    const imgElement = focusedImageElementRef.current;\r\n    if (!imgElement) return;\r\n\r\n    const orchidsId = imgElement.getAttribute(\"data-orchids-id\");\r\n    if (!orchidsId) return;\r\n\r\n    const parsed = parseOrchidsId(orchidsId);\r\n    if (!parsed) return;\r\n\r\n    const newSrc = normalizeImageSrc(imgElement.src);\r\n    const oldSrc = normalizeImageSrc(originalSrcRef.current);\r\n\r\n    if (!newSrc || newSrc === oldSrc) return; // nothing changed\r\n\r\n    const msg: ChildToParent = {\r\n      type: CHANNEL,\r\n      msg: \"IMAGE_BLUR\",\r\n      id: orchidsId,\r\n      oldSrc,\r\n      newSrc,\r\n      filePath: parsed.filePath,\r\n      line: parsed.line,\r\n      column: parsed.column,\r\n    };\r\n\r\n    postMessageDedup(msg);\r\n\r\n    originalSrcRef.current = newSrc; // reset baseline\r\n    focusedImageElementRef.current = null; // clear reference\r\n  };\r\n\r\n  // Listen for style and image updates from parent\r\n  useEffect(() => {\r\n    function handleMessage(e: MessageEvent) {\r\n      if (e.data?.type === \"ORCHIDS_STYLE_UPDATE\") {\r\n        const { elementId, styles } = e.data;\r\n\r\n        // Find ALL elements with the same orchids ID\r\n        const allMatchingElements = document.querySelectorAll(\r\n          `[data-orchids-id=\"${elementId}\"]`\r\n        ) as NodeListOf<HTMLElement>;\r\n\r\n        if (allMatchingElements.length > 0) {\r\n          // If fontFamily is present ensure stylesheet loaded first\r\n          const fam = styles.fontFamily || styles[\"fontFamily\"];\r\n          if (fam) {\r\n            const familyKey = fam.replace(/['\\s]+/g, \"+\");\r\n            if (!loadedFontFamilies.current.has(familyKey)) {\r\n              const link = document.createElement(\"link\");\r\n              link.rel = \"stylesheet\";\r\n              link.href = `https://fonts.googleapis.com/css2?family=${familyKey}:wght@400&display=swap`;\r\n              document.head.appendChild(link);\r\n              loadedFontFamilies.current.add(familyKey);\r\n            }\r\n          }\r\n\r\n          // If fontFamily made persistent via style update, remember so previews don't override\r\n          if (fam) {\r\n            persistentFontMap.current.set(elementId, fam);\r\n\r\n            // Clear any existing timeout\r\n            const existingTimeout =\r\n              persistentFontTimeouts.current.get(elementId);\r\n            if (existingTimeout) {\r\n              clearTimeout(existingTimeout);\r\n            }\r\n\r\n            // Set timeout to clear persistent font after 2 seconds, allowing previews again\r\n            const timeoutId = window.setTimeout(() => {\r\n              persistentFontMap.current.delete(elementId);\r\n              persistentFontTimeouts.current.delete(elementId);\r\n            }, 2000);\r\n\r\n            persistentFontTimeouts.current.set(elementId, timeoutId);\r\n          }\r\n\r\n          // Apply styles to ALL matching elements\r\n          allMatchingElements.forEach((element) => {\r\n            // Only update handleStyleChange for the focused element to track changes\r\n            if (focusedElementRef.current === element) {\r\n              handleStyleChange(element, styles);\r\n            } else {\r\n              // For other elements, apply styles directly\r\n              Object.entries(styles).forEach(([property, value]) => {\r\n                const cssProp = property\r\n                  .replace(/([A-Z])/g, \"-$1\")\r\n                  .toLowerCase();\r\n\r\n                // Handle special cases for default values\r\n                let finalValue = String(value);\r\n\r\n                // If backgroundColor is being set to transparent, use transparent keyword\r\n                if (\r\n                  property === \"backgroundColor\" &&\r\n                  (value === \"transparent\" ||\r\n                    value === \"rgba(0, 0, 0, 0)\" ||\r\n                    value === \"rgb(0, 0, 0, 0)\")\r\n                ) {\r\n                  finalValue = \"transparent\";\r\n                }\r\n\r\n                // If removing styles (setting to default), remove the property\r\n                if (\r\n                  (property === \"backgroundColor\" &&\r\n                    finalValue === \"transparent\") ||\r\n                  (property === \"backgroundImage\" && value === \"none\") ||\r\n                  (property === \"textDecoration\" && value === \"none\") ||\r\n                  (property === \"fontStyle\" && value === \"normal\") ||\r\n                  (property === \"opacity\" && value === \"1\") ||\r\n                  ((property.includes(\"padding\") ||\r\n                    property.includes(\"margin\")) &&\r\n                    value === \"0\") ||\r\n                  (property === \"borderRadius\" && value === \"0\") ||\r\n                  (property === \"letterSpacing\" && value === \"normal\") ||\r\n                  (property === \"gap\" && value === \"normal\")\r\n                ) {\r\n                  // Remove the property to let the stylesheet value show through\r\n                  element.style.removeProperty(cssProp);\r\n                } else {\r\n                  element.style.setProperty(cssProp, finalValue, \"important\");\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      } else if (e.data?.type === \"ORCHIDS_IMAGE_UPDATE\") {\r\n        const { elementId, src, oldSrc } = e.data;\r\n        let element: HTMLImageElement | null = null;\r\n        const candidates = document.querySelectorAll(\r\n          `[data-orchids-id=\"${elementId}\"]`\r\n        );\r\n        candidates.forEach((el) => {\r\n          if (el.tagName.toLowerCase() === \"img\") {\r\n            const img = el as HTMLImageElement;\r\n            const norm = normalizeImageSrc(img.src);\r\n            if (!element) element = img; // first fallback\r\n            if (oldSrc && normalizeImageSrc(oldSrc) === norm) {\r\n              element = img;\r\n            }\r\n          }\r\n        });\r\n\r\n        if (!element) return;\r\n\r\n        if ((element as HTMLElement).tagName.toLowerCase() === \"img\") {\r\n          const imgEl = element as HTMLImageElement;\r\n\r\n          {\r\n            /*\r\n             * Clear any existing responsive sources so the newly uploaded image\r\n             * always displays.  Some frameworks (e.g. Next.js) add a `srcset`\r\n             * attribute which can override `src` in certain viewport/device\r\n             * scenarios, so we strip it out before setting the new source.\r\n             */\r\n            imgEl.removeAttribute(\"srcset\");\r\n            imgEl.srcset = \"\";\r\n\r\n            imgEl.src = src;\r\n\r\n            // Update baseline src so flush doesn't treat this as pending change\r\n            originalSrcRef.current = normalizeImageSrc(src);\r\n            focusedImageElementRef.current = imgEl;\r\n\r\n            imgEl.onload = () => updateFocusBox();\r\n          }\r\n        }\r\n      } else if (e.data?.type === \"RESIZE_ELEMENT\") {\r\n        const { elementId, width, height } = e.data;\r\n        const element = document.querySelector(\r\n          `[data-orchids-id=\"${elementId}\"]`\r\n        ) as HTMLElement;\r\n\r\n        if (element && focusedElementRef.current === element) {\r\n          // Apply temporary resize styles\r\n          element.style.setProperty(\"width\", `${width}px`, \"important\");\r\n          element.style.setProperty(\"height\", `${height}px`, \"important\");\r\n\r\n          // Update focus box\r\n          updateFocusBox();\r\n        }\r\n      }\r\n    }\r\n\r\n    window.addEventListener(\"message\", handleMessage);\r\n    return () => window.removeEventListener(\"message\", handleMessage);\r\n  }, []);\r\n\r\n  // Handle resize\r\n  const handleResizeStart = (e: React.MouseEvent, handle: string) => {\r\n    if (!focusedElementRef.current) return;\r\n\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    const rect = focusedElementRef.current.getBoundingClientRect();\r\n\r\n    // Clear any hover overlay when starting resize\r\n    setHoverBox(null);\r\n    lastHitElementRef.current = null;\r\n\r\n    // Disable pointer events on body to prevent hover detection\r\n    document.body.style.pointerEvents = \"none\";\r\n    // Keep resize handles interactive\r\n    const resizeHandles = document.querySelectorAll(\".resize-handle\");\r\n    resizeHandles.forEach((handle) => {\r\n      (handle as HTMLElement).style.pointerEvents = \"auto\";\r\n    });\r\n\r\n    setIsResizing(true);\r\n    isResizingRef.current = true;\r\n    setResizeHandle(handle);\r\n    setResizeStart({\r\n      x: e.clientX,\r\n      y: e.clientY,\r\n      width: rect.width,\r\n      height: rect.height,\r\n    });\r\n  };\r\n\r\n  // Handle resize move\r\n  useEffect(() => {\r\n    if (\r\n      !isResizing ||\r\n      !resizeStart ||\r\n      !resizeHandle ||\r\n      !focusedElementRef.current\r\n    )\r\n      return;\r\n\r\n    const handleMouseMove = (e: MouseEvent) => {\r\n      const dx = e.clientX - resizeStart.x;\r\n      const dy = e.clientY - resizeStart.y;\r\n\r\n      let newWidth = resizeStart.width;\r\n      let newHeight = resizeStart.height;\r\n\r\n      // Calculate new dimensions based on handle\r\n      if (resizeHandle.includes(\"e\")) newWidth = resizeStart.width + dx;\r\n      if (resizeHandle.includes(\"w\")) newWidth = resizeStart.width - dx;\r\n      if (resizeHandle.includes(\"s\")) newHeight = resizeStart.height + dy;\r\n      if (resizeHandle.includes(\"n\")) newHeight = resizeStart.height - dy;\r\n\r\n      // Get parent container for constraints\r\n      const parent = focusedElementRef.current?.parentElement;\r\n      if (parent) {\r\n        const parentRect = parent.getBoundingClientRect();\r\n        const parentStyles = window.getComputedStyle(parent);\r\n        const parentPaddingLeft = parseFloat(parentStyles.paddingLeft) || 0;\r\n        const parentPaddingRight = parseFloat(parentStyles.paddingRight) || 0;\r\n        const parentPaddingTop = parseFloat(parentStyles.paddingTop) || 0;\r\n        const parentPaddingBottom = parseFloat(parentStyles.paddingBottom) || 0;\r\n\r\n        const maxWidth =\r\n          parentRect.width - parentPaddingLeft - parentPaddingRight;\r\n        const maxHeight =\r\n          parentRect.height - parentPaddingTop - parentPaddingBottom;\r\n\r\n        /*\r\n         * Soft-clamp strategy: we respect the parent’s max size until the\r\n         * user’s cursor actually travels beyond that limit.  As soon as the\r\n         * drag distance would produce a dimension larger than the container\r\n         * can accommodate we stop clamping and let the element follow the\r\n         * cursor, effectively allowing it to “spill” out of its parent.\r\n         */\r\n        const exceedsWidth = newWidth > maxWidth;\r\n        const exceedsHeight = newHeight > maxHeight;\r\n\r\n        newWidth = Math.max(\r\n          20,\r\n          exceedsWidth ? newWidth : Math.min(newWidth, maxWidth)\r\n        );\r\n\r\n        newHeight = Math.max(\r\n          20,\r\n          exceedsHeight ? newHeight : Math.min(newHeight, maxHeight)\r\n        );\r\n      } else {\r\n        // Fallback to minimum dimensions if no parent\r\n        newWidth = Math.max(20, newWidth);\r\n        newHeight = Math.max(20, newHeight);\r\n      }\r\n\r\n      // Ensure hover box stays hidden during resize\r\n      if (hoverBox) {\r\n        setHoverBox(null);\r\n      }\r\n\r\n      // Send resize message to parent\r\n      if (focusedElementId) {\r\n        window.parent.postMessage(\r\n          {\r\n            type: CHANNEL,\r\n            msg: \"RESIZE_ELEMENT\",\r\n            elementId: focusedElementId,\r\n            width: Math.round(newWidth),\r\n            height: Math.round(newHeight),\r\n          },\r\n          \"*\"\r\n        );\r\n      }\r\n    };\r\n\r\n    const handleMouseUp = () => {\r\n      if (focusedElementRef.current && focusedElementId) {\r\n        const element = focusedElementRef.current;\r\n        const computedStyle = window.getComputedStyle(element);\r\n        const width = parseFloat(computedStyle.width) || element.offsetWidth;\r\n        const height = parseFloat(computedStyle.height) || element.offsetHeight;\r\n\r\n        // Check if element has max-width/max-height constraints\r\n        const maxWidth = computedStyle.maxWidth;\r\n        const maxHeight = computedStyle.maxHeight;\r\n        const hasMaxWidth =\r\n          maxWidth && maxWidth !== \"none\" && maxWidth !== \"initial\";\r\n        const hasMaxHeight =\r\n          maxHeight && maxHeight !== \"none\" && maxHeight !== \"initial\";\r\n\r\n        // Try to use relative units when possible\r\n        const parent = element.parentElement;\r\n        let widthValue = `${Math.round(width)}px`;\r\n        let heightValue = `${Math.round(height)}px`;\r\n\r\n        if (parent) {\r\n          const parentRect = parent.getBoundingClientRect();\r\n          const parentStyles = window.getComputedStyle(parent);\r\n          const parentPaddingLeft = parseFloat(parentStyles.paddingLeft) || 0;\r\n          const parentPaddingRight = parseFloat(parentStyles.paddingRight) || 0;\r\n          const parentPaddingTop = parseFloat(parentStyles.paddingTop) || 0;\r\n          const parentPaddingBottom =\r\n            parseFloat(parentStyles.paddingBottom) || 0;\r\n\r\n          const parentInnerWidth =\r\n            parentRect.width - parentPaddingLeft - parentPaddingRight;\r\n          const parentInnerHeight =\r\n            parentRect.height - parentPaddingTop - parentPaddingBottom;\r\n\r\n          // If the element takes up a significant portion of parent, use percentage\r\n          const widthPercent = (width / parentInnerWidth) * 100;\r\n          const heightPercent = (height / parentInnerHeight) * 100;\r\n\r\n          // Use percentage if it's a round number or close to common values\r\n          if (\r\n            Math.abs(widthPercent - Math.round(widthPercent)) < 0.1 ||\r\n            [25, 33.333, 50, 66.667, 75, 100].some(\r\n              (v) => Math.abs(widthPercent - v) < 0.5\r\n            )\r\n          ) {\r\n            widthValue = `${Math.round(widthPercent * 10) / 10}%`;\r\n          }\r\n\r\n          // For height, be more conservative with percentages (often px is preferred)\r\n          if (\r\n            Math.abs(heightPercent - Math.round(heightPercent)) < 0.1 &&\r\n            [25, 50, 75, 100].includes(Math.round(heightPercent))\r\n          ) {\r\n            heightValue = `${Math.round(heightPercent)}%`;\r\n          }\r\n        }\r\n\r\n        // Build styles object\r\n        const styles: Record<string, string> = {};\r\n\r\n        // Always set a fixed width and height to break out of responsive classes.\r\n        styles.width = widthValue;\r\n        styles.height = heightValue;\r\n\r\n        // If the element had a max-width constraint (e.g. from `max-w-full`),\r\n        // we update it to the new width to ensure the resize is not capped.\r\n        if (hasMaxWidth) {\r\n          styles.maxWidth = widthValue;\r\n        }\r\n\r\n        // Same for height.\r\n        if (hasMaxHeight) {\r\n          styles.maxHeight = heightValue;\r\n        }\r\n\r\n        // Send final dimensions as style change\r\n        const msg: ChildToParent = {\r\n          type: CHANNEL,\r\n          msg: \"STYLE_BLUR\",\r\n          id: focusedElementId,\r\n          styles,\r\n          filePath: \"\",\r\n          line: 0,\r\n          column: 0,\r\n          className: element.getAttribute(\"class\") || \"\",\r\n        };\r\n\r\n        // Extract file info from data-orchids-id\r\n        const orchidsId = element.getAttribute(\"data-orchids-id\");\r\n        if (orchidsId) {\r\n          const parsed = parseOrchidsId(orchidsId);\r\n          if (parsed) {\r\n            msg.filePath = parsed.filePath;\r\n            msg.line = parsed.line;\r\n            msg.column = parsed.column;\r\n          }\r\n        }\r\n\r\n        window.parent.postMessage(msg, \"*\");\r\n      }\r\n\r\n      setIsResizing(false);\r\n      isResizingRef.current = false;\r\n      setResizeHandle(null);\r\n      setResizeStart(null);\r\n\r\n      // Re-enable pointer events\r\n      document.body.style.pointerEvents = \"\";\r\n\r\n      // Clear the last hit element to force re-detection after resize\r\n      lastHitElementRef.current = null;\r\n    };\r\n\r\n    document.addEventListener(\"mousemove\", handleMouseMove);\r\n    document.addEventListener(\"mouseup\", handleMouseUp);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousemove\", handleMouseMove);\r\n      document.removeEventListener(\"mouseup\", handleMouseUp);\r\n    };\r\n  }, [isResizing, resizeStart, resizeHandle, focusedElementId, hoverBox]); // Added focusedElementId and hoverBox as dependencies\r\n\r\n  // Cleanup function to restore element state\r\n  const cleanupEditingElement = () => {\r\n    if (editingElementRef.current) {\r\n      const element = editingElementRef.current;\r\n\r\n      // Immediately clear the ref to prevent any further operations\r\n      editingElementRef.current = null;\r\n\r\n      // Flush pending style edits first for the same reason described above\r\n      handleStyleBlur(element);\r\n\r\n      // Now process text changes\r\n      handleTextChange(element);\r\n\r\n      // Restore child elements if they were protected\r\n      if (element.childElementCount > 0) {\r\n        restoreChildElements(element);\r\n      }\r\n\r\n      // Only set contentEditable to false if we made it true\r\n      if (!wasEditableRef.current) {\r\n        element.contentEditable = \"false\";\r\n      }\r\n\r\n      // Don't restore original styles - keep the applied styles\r\n      // Remove the outline suppression styles only\r\n      const currentStyle = element.getAttribute(\"style\") || \"\";\r\n      const cleanedStyle = currentStyle\r\n        .replace(/outline:\\s*none\\s*!important;?/gi, \"\")\r\n        .replace(/box-shadow:\\s*none\\s*!important;?/gi, \"\")\r\n        .trim()\r\n        .replace(/;\\s*;/g, \";\")\r\n        .replace(/^;|;$/g, \"\");\r\n\r\n      if (cleanedStyle) {\r\n        element.setAttribute(\"style\", cleanedStyle);\r\n      } else {\r\n        element.removeAttribute(\"style\");\r\n      }\r\n\r\n      element.blur();\r\n\r\n      // Remove event handlers\r\n      const handlers = (element as any)._editHandlers;\r\n      if (handlers) {\r\n        element.removeEventListener(\"focus\", handlers.focus);\r\n        element.removeEventListener(\"blur\", handlers.blur);\r\n        element.removeEventListener(\"input\", handlers.input);\r\n        delete (element as any)._editHandlers;\r\n      }\r\n\r\n      wasEditableRef.current = false;\r\n      // Clear the original content reference\r\n      originalContentRef.current = \"\";\r\n    }\r\n  };\r\n\r\n  // Prevent all navigation in visual edit mode\r\n  useEffect(() => {\r\n    if (!isVisualEditMode) return;\r\n\r\n    // Prevent link clicks\r\n    const preventLinkClick = (e: Event) => {\r\n      const target = e.target as HTMLElement;\r\n      const link = target.closest(\"a\");\r\n      if (link && !link.isContentEditable) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      }\r\n    };\r\n\r\n    // Prevent form submissions\r\n    const preventFormSubmit = (e: Event) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    };\r\n\r\n    // Add listeners in capture phase to catch events early\r\n    document.addEventListener(\"click\", preventLinkClick, true);\r\n    document.addEventListener(\"submit\", preventFormSubmit, true);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"click\", preventLinkClick, true);\r\n      document.removeEventListener(\"submit\", preventFormSubmit, true);\r\n    };\r\n  }, [isVisualEditMode]);\r\n\r\n  // Clean up when exiting visual edit mode\r\n  useEffect(() => {\r\n    if (!isVisualEditMode) {\r\n      cleanupEditingElement();\r\n      // Clear applied styles tracking\r\n      appliedStylesRef.current.clear();\r\n      hasStyleChangesRef.current = false;\r\n\r\n      // Clear image element reference\r\n      focusedImageElementRef.current = null;\r\n    }\r\n  }, [isVisualEditMode]);\r\n\r\n  // Update focus box position when scrolling or resizing\r\n  useEffect(() => {\r\n    if (focusedElementRef.current) {\r\n      const handleUpdate = () => {\r\n        updateFocusBox();\r\n\r\n        if (focusedElementRef.current && focusedElementId) {\r\n          const fr = focusedElementRef.current.getBoundingClientRect();\r\n          const fBox = expandBox(fr);\r\n          if (fBox) {\r\n            const focMsg: ChildToParent = {\r\n              type: CHANNEL,\r\n              msg: \"FOCUS_MOVED\",\r\n              id: focusedElementId,\r\n              rect: {\r\n                top: fBox.top,\r\n                left: fBox.left,\r\n                width: fBox.width,\r\n                height: fBox.height,\r\n              },\r\n            };\r\n            postMessageDedup(focMsg);\r\n          }\r\n        }\r\n      };\r\n\r\n      window.addEventListener(\"scroll\", handleUpdate, true);\r\n      window.addEventListener(\"resize\", handleUpdate);\r\n\r\n      // Also observe the focused element for size changes\r\n      const resizeObserver = new ResizeObserver(handleUpdate);\r\n      resizeObserver.observe(focusedElementRef.current);\r\n\r\n      return () => {\r\n        window.removeEventListener(\"scroll\", handleUpdate, true);\r\n        window.removeEventListener(\"resize\", handleUpdate);\r\n        resizeObserver.disconnect();\r\n      };\r\n    }\r\n  }, [focusedElementId]);\r\n\r\n  useEffect(() => {\r\n    // Handle pointer movement directly in the iframe\r\n    function onPointerMove(e: PointerEvent) {\r\n      if (isResizingRef.current) {\r\n        return;\r\n      }\r\n      // Only track pointer when visual edit mode is active\r\n      if (!isVisualEditModeRef.current) return;\r\n\r\n      // Don't show hover boxes while scrolling\r\n      if (isScrolling) return;\r\n\r\n      // Hit-testing at pointer position\r\n      const hit =\r\n        document\r\n          .elementFromPoint(e.clientX, e.clientY)\r\n          ?.closest<HTMLElement>(\"[data-orchids-id]\") ?? null;\r\n\r\n      if (hit !== lastHitElementRef.current) {\r\n        lastHitElementRef.current = hit;\r\n\r\n        if (!hit) {\r\n          setHoverBox(null);\r\n          setHoverBoxes([]);\r\n          setHoverTag(null);\r\n          lastHitIdRef.current = null;\r\n          // If we were previously focused on an image, ensure its src is flushed\r\n          flushImageSrcChange();\r\n\r\n          const msg: ChildToParent = {\r\n            type: CHANNEL,\r\n            msg: \"HIT\",\r\n            id: null,\r\n            tag: null,\r\n            rect: null,\r\n          };\r\n          postMessageDedup(msg);\r\n          return;\r\n        }\r\n\r\n        // Don't show hover box if this is the focused element\r\n        const hitId = hit.getAttribute(\"data-orchids-id\");\r\n\r\n        // Check if we're already showing boxes for this ID\r\n        if (hitId === lastHitIdRef.current) {\r\n          return;\r\n        }\r\n\r\n        lastHitIdRef.current = hitId;\r\n\r\n        const tagName =\r\n          hit.getAttribute(\"data-orchids-name\") || hit.tagName.toLowerCase();\r\n\r\n        // Update hover boxes immediately for instant feedback\r\n        // Find ALL elements with the same orchids ID\r\n        const allMatchingElements = document.querySelectorAll(\r\n          `[data-orchids-id=\"${hitId}\"]`\r\n        ) as NodeListOf<HTMLElement>;\r\n\r\n        // Create hover boxes for all matching elements except the focused one\r\n        const boxes: Box[] = [];\r\n        allMatchingElements.forEach((element) => {\r\n          // Skip if this element is the focused one\r\n          const elementId = element.getAttribute(\"data-orchids-id\");\r\n          if (elementId === focusedElementId) {\r\n            return;\r\n          }\r\n\r\n          const rect = element.getBoundingClientRect();\r\n          boxes.push(expandBox(rect));\r\n        });\r\n\r\n        // Set multiple hover boxes\r\n        setHoverBoxes(boxes);\r\n\r\n        // Set single hover box for the primary element (for compatibility)\r\n        // Only set if it's not the focused element\r\n        if (hitId !== focusedElementId) {\r\n          const r = hit.getBoundingClientRect();\r\n          const expandedBox = expandBox(r);\r\n          setHoverBox(expandedBox);\r\n        } else {\r\n          setHoverBox(null);\r\n        }\r\n\r\n        setHoverTag(tagName);\r\n\r\n        const msg: ChildToParent = {\r\n          type: CHANNEL,\r\n          msg: \"HIT\",\r\n          id: hitId,\r\n          tag: tagName,\r\n          rect:\r\n            hitId !== focusedElementId\r\n              ? expandBox(hit.getBoundingClientRect())\r\n              : null,\r\n        };\r\n        postMessageDedup(msg);\r\n      }\r\n    }\r\n\r\n    // Handle pointer leaving the document\r\n    function onPointerLeave() {\r\n      if (!isVisualEditModeRef.current) return;\r\n\r\n      if (isResizingRef.current) return;\r\n\r\n      setHoverBox(null);\r\n      setHoverBoxes([]);\r\n      setHoverTag(null);\r\n\r\n      // Flush image src change when cursor leaves iframe altogether\r\n      flushImageSrcChange();\r\n\r\n      lastHitElementRef.current = null;\r\n      lastHitIdRef.current = null;\r\n      const msg: ChildToParent = {\r\n        type: CHANNEL,\r\n        msg: \"HIT\",\r\n        id: null,\r\n        tag: null,\r\n        rect: null,\r\n      };\r\n      postMessageDedup(msg);\r\n    }\r\n\r\n    // Handle mousedown to prepare element for editing\r\n    function onMouseDownCapture(e: MouseEvent) {\r\n      if (isResizingRef.current) return;\r\n      // Only handle if visual edit mode is active\r\n      if (!isVisualEditModeRef.current) return;\r\n\r\n      const hit = (e.target as HTMLElement)?.closest<HTMLElement>(\r\n        \"[data-orchids-id]\"\r\n      );\r\n\r\n      if (hit && isTextEditable(hit)) {\r\n        // Store whether it was already editable\r\n        wasEditableRef.current = hit.contentEditable === \"true\";\r\n\r\n        // Make element editable BEFORE the click goes through\r\n        if (!wasEditableRef.current) {\r\n          // Apply inline styles to remove focus ring\r\n          const currentStyle = hit.getAttribute(\"style\") || \"\";\r\n          hit.setAttribute(\r\n            \"style\",\r\n            `${currentStyle}; outline: none !important; box-shadow: none !important;`\r\n          );\r\n\r\n          hit.contentEditable = \"true\";\r\n\r\n          // If the element has children, protect them from being edited\r\n          if (hit.childElementCount > 0) {\r\n            protectChildElements(hit);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Handle clicks to focus elements\r\n    function onClickCapture(e: MouseEvent) {\r\n      if (isResizingRef.current) return;\r\n      // Only handle if visual edit mode is active\r\n      if (!isVisualEditModeRef.current) return;\r\n\r\n      // Debounce rapid clicks\r\n      const now = Date.now();\r\n      if (now - lastClickTimeRef.current < 100) {\r\n        return; // Ignore clicks within 100ms of each other\r\n      }\r\n      lastClickTimeRef.current = now;\r\n\r\n      const target = e.target as HTMLElement;\r\n      const hit = target.closest<HTMLElement>(\"[data-orchids-id]\");\r\n\r\n      if (hit) {\r\n        const tagName =\r\n          hit.getAttribute(\"data-orchids-name\") || hit.tagName.toLowerCase();\r\n\r\n        const hitId = hit.getAttribute(\"data-orchids-id\");\r\n        const isEditable = isTextEditable(hit);\r\n\r\n        // Always prevent default for non-text interactions\r\n        const isLink = hit.tagName.toLowerCase() === \"a\" || !!hit.closest(\"a\");\r\n        const isButton =\r\n          hit.tagName.toLowerCase() === \"button\" ||\r\n          hit.getAttribute(\"role\") === \"button\";\r\n\r\n        // Prevent navigation and button actions\r\n        if (isLink || isButton || !isEditable) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n        }\r\n\r\n        // Capture previously focused element before updating\r\n        const prevFocused = focusedElementRef.current;\r\n\r\n        // Update focused element\r\n        focusedElementRef.current = hit;\r\n        setFocusedElementId(hitId);\r\n        setFocusTag(tagName);\r\n\r\n        // Save focused element info to localStorage\r\n        if (hitId && typeof window !== \"undefined\") {\r\n          const focusedElementData = {\r\n            id: hitId,\r\n            tag: tagName,\r\n          };\r\n          localStorage.setItem(\r\n            FOCUSED_ELEMENT_KEY,\r\n            JSON.stringify(focusedElementData)\r\n          );\r\n        }\r\n\r\n        // Find ALL other elements with the same orchids ID and show hover boxes\r\n        const allMatchingElements = document.querySelectorAll(\r\n          `[data-orchids-id=\"${hitId}\"]`\r\n        ) as NodeListOf<HTMLElement>;\r\n\r\n        // Create hover boxes for all matching elements except the focused one\r\n        const boxes: Box[] = [];\r\n        allMatchingElements.forEach((element) => {\r\n          // Skip the focused element itself\r\n          if (element === hit) {\r\n            return;\r\n          }\r\n\r\n          const rect = element.getBoundingClientRect();\r\n          boxes.push(expandBox(rect));\r\n        });\r\n\r\n        // Set hover boxes for other matching elements\r\n        setHoverBoxes(boxes);\r\n        // Set the hover tag to show on other elements\r\n        if (boxes.length > 0) {\r\n          setHoverTag(tagName);\r\n        }\r\n\r\n        // Track image element specifically\r\n        if (hit.tagName.toLowerCase() === \"img\") {\r\n          focusedImageElementRef.current = hit as HTMLImageElement;\r\n        } else {\r\n          focusedImageElementRef.current = null;\r\n        }\r\n\r\n        // Store original styles for the focused element\r\n        originalStylesRef.current = getCurrentStyles(hit);\r\n\r\n        // If this is an editable element, set it up\r\n        if (isEditable) {\r\n          // Cancel any pending cleanup\r\n          if (pendingCleanupRef.current) {\r\n            clearTimeout(pendingCleanupRef.current);\r\n            pendingCleanupRef.current = null;\r\n          }\r\n\r\n          // Clean up any previous editing element first\r\n          if (editingElementRef.current && editingElementRef.current !== hit) {\r\n            // Force blur on the previous element to trigger handlers\r\n            editingElementRef.current.blur();\r\n            cleanupEditingElement();\r\n          }\r\n\r\n          // Only set up if this is a new element\r\n          if (hit !== editingElementRef.current) {\r\n            editingElementRef.current = hit;\r\n            // Store original content - for elements with children, only store direct text\r\n            if (hit.childElementCount > 0) {\r\n              originalContentRef.current = extractDirectTextContent(hit);\r\n            } else {\r\n              originalContentRef.current =\r\n                hit.innerText || hit.textContent || \"\";\r\n            }\r\n\r\n            // Create handlers with current element reference\r\n            const createHandlers = (element: HTMLElement) => {\r\n              const handleFocus = () => {\r\n                // Double-check this is still the editing element\r\n                if (element !== editingElementRef.current) return;\r\n\r\n                // If the user applied inline style edits **before** entering text\r\n                // editing mode, make sure we commit them right away so that the\r\n                // subsequent text edits operate on the updated source.\r\n                handleStyleBlur(element);\r\n\r\n                // Update original content - for elements with children, only store direct text\r\n                if (element.childElementCount > 0) {\r\n                  originalContentRef.current =\r\n                    extractDirectTextContent(element);\r\n                } else {\r\n                  originalContentRef.current =\r\n                    element.innerText || element.textContent || \"\";\r\n                }\r\n\r\n                // Style blur above resets the flag – keep it in sync.\r\n                hasStyleChangesRef.current = false;\r\n              };\r\n\r\n              const handleBlur = () => {\r\n                // Double-check this is still the editing element\r\n                if (element !== editingElementRef.current) return;\r\n\r\n                // Flush style changes *before* text changes so that the style\r\n                // update is committed with the original line/column offsets.\r\n                // A subsequent text update may shift the source code which would\r\n                // otherwise cause the later style edit to fail.\r\n                handleStyleBlur(element);\r\n                handleTextChange(element);\r\n              };\r\n\r\n              const handleInput = () => {\r\n                // Double-check this is still the editing element\r\n                if (element !== editingElementRef.current) return;\r\n                // Optionally handle real-time updates\r\n                // handleTextChange(element);\r\n              };\r\n\r\n              return { handleFocus, handleBlur, handleInput };\r\n            };\r\n\r\n            const handlers = createHandlers(hit);\r\n            hit.addEventListener(\"focus\", handlers.handleFocus);\r\n            hit.addEventListener(\"blur\", handlers.handleBlur);\r\n            hit.addEventListener(\"input\", handlers.handleInput);\r\n\r\n            // Store handlers for cleanup\r\n            (hit as any)._editHandlers = {\r\n              focus: handlers.handleFocus,\r\n              blur: handlers.handleBlur,\r\n              input: handlers.handleInput,\r\n            };\r\n          }\r\n        }\r\n\r\n        // Update focus box with expanded dimensions\r\n        const r = hit.getBoundingClientRect();\r\n        const expandedBox = expandBox(r);\r\n        setFocusBox(expandedBox);\r\n\r\n        // Clear hover box since we're focusing\r\n        setHoverBox(null);\r\n\r\n        // Get className for Tailwind extraction\r\n        const className = hit.getAttribute(\"class\") || \"\";\r\n\r\n        // Get src for images & track original\r\n        const srcRaw =\r\n          hit.tagName.toLowerCase() === \"img\"\r\n            ? (hit as HTMLImageElement).src\r\n            : undefined;\r\n\r\n        if (srcRaw) {\r\n          originalSrcRef.current = normalizeImageSrc(srcRaw);\r\n        }\r\n\r\n        // Get current styles immediately\r\n        const computedStyles = getCurrentStyles(hit);\r\n\r\n        // Send click event to parent with coordinates and current styles\r\n        const msg: ChildToParent = {\r\n          type: CHANNEL,\r\n          msg: \"ELEMENT_CLICKED\",\r\n          id: hitId,\r\n          tag: tagName,\r\n          rect: expandedBox\r\n            ? {\r\n                top: expandedBox.top,\r\n                left: expandedBox.left,\r\n                width: expandedBox.width,\r\n                height: expandedBox.height,\r\n              }\r\n            : {\r\n                top: 0,\r\n                left: 0,\r\n                width: 0,\r\n                height: 0,\r\n              },\r\n          clickPosition: {\r\n            x: e.clientX,\r\n            y: e.clientY,\r\n          },\r\n          isEditable,\r\n          currentStyles: computedStyles,\r\n          className,\r\n          src: srcRaw,\r\n        };\r\n\r\n        // Send message with all data at once\r\n        postMessageDedup(msg);\r\n\r\n        // Move cleanup operations to after message is sent\r\n        setTimeout(() => {\r\n          // Before changing focus, flush pending image src change\r\n          flushImageSrcChange();\r\n\r\n          // Flush style changes for the previously focused element (if any)\r\n          if (prevFocused && prevFocused !== hit) {\r\n            handleStyleBlur(prevFocused);\r\n          }\r\n\r\n          // Clean up any previous editing element (if it's different)\r\n          if (editingElementRef.current && editingElementRef.current !== hit) {\r\n            cleanupEditingElement();\r\n          }\r\n        }, 0);\r\n      } else {\r\n        // Clicked on empty space or element without data-orchids-id\r\n        // Clear focus and hover boxes\r\n        if (focusedElementRef.current) {\r\n          // Flush any pending changes\r\n          flushImageSrcChange();\r\n          handleStyleBlur(focusedElementRef.current);\r\n          cleanupEditingElement();\r\n\r\n          // Clear all focus and hover states\r\n          focusedElementRef.current = null;\r\n          setFocusedElementId(null);\r\n          setFocusTag(null);\r\n          setFocusBox(null);\r\n          setHoverBox(null);\r\n          setHoverBoxes([]);\r\n          setHoverTag(null);\r\n\r\n          // Clear focused element from localStorage\r\n          if (typeof window !== \"undefined\") {\r\n            localStorage.removeItem(FOCUSED_ELEMENT_KEY);\r\n          }\r\n\r\n          // Notify parent that focus was cleared\r\n          const msg: ChildToParent = {\r\n            type: CHANNEL,\r\n            msg: \"ELEMENT_CLICKED\",\r\n            id: null,\r\n            tag: null,\r\n            rect: {\r\n              top: 0,\r\n              left: 0,\r\n              width: 0,\r\n              height: 0,\r\n            },\r\n            clickPosition: {\r\n              x: e.clientX,\r\n              y: e.clientY,\r\n            },\r\n            isEditable: false,\r\n            currentStyles: {},\r\n            className: \"\",\r\n          };\r\n          postMessageDedup(msg);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Handle messages from parent\r\n    function onMsg(e: MessageEvent<ParentToChild>) {\r\n      if (e.data?.type !== CHANNEL) return;\r\n\r\n      // Handle preview font request from parent\r\n      if (e.data.msg === \"PREVIEW_FONT\" && \"elementId\" in e.data) {\r\n        const { elementId, fontFamily } = e.data;\r\n\r\n        // Skip if font already persisted for this element to avoid race condition\r\n        if (persistentFontMap.current.has(elementId)) {\r\n          return;\r\n        }\r\n\r\n        const element = document.querySelector(\r\n          `[data-orchids-id=\"${elementId}\"]`\r\n        ) as HTMLElement | null;\r\n        if (!element) return;\r\n\r\n        // Ensure font stylesheet is loaded\r\n        const familyKey = fontFamily.replace(/\\s+/g, \"+\");\r\n        if (!loadedFontFamilies.current.has(familyKey)) {\r\n          const link = document.createElement(\"link\");\r\n          link.rel = \"stylesheet\";\r\n          link.href = `https://fonts.googleapis.com/css2?family=${familyKey}:wght@400&display=swap`;\r\n          document.head.appendChild(link);\r\n          loadedFontFamilies.current.add(familyKey);\r\n        }\r\n\r\n        // Apply font family to element inline for preview\r\n        element.style.fontFamily = `'${fontFamily}', sans-serif`;\r\n        return;\r\n      }\r\n\r\n      // Handle scroll messages from parent\r\n      if (e.data.msg === \"SCROLL\" && \"dx\" in e.data && \"dy\" in e.data) {\r\n        window.scrollBy(e.data.dx, e.data.dy);\r\n      }\r\n\r\n      // Handle visual edit mode state changes\r\n      if (e.data.msg === \"VISUAL_EDIT_MODE\" && \"active\" in e.data) {\r\n        const newMode = e.data.active;\r\n        setIsVisualEditMode(newMode);\r\n\r\n        // Clear localStorage if visual edit mode is being turned off\r\n        if (!newMode && typeof window !== \"undefined\") {\r\n          localStorage.removeItem(VISUAL_EDIT_MODE_KEY);\r\n          localStorage.removeItem(FOCUSED_ELEMENT_KEY);\r\n        }\r\n\r\n        // Send acknowledgement back to parent so it knows we received the mode change\r\n        window.parent.postMessage(\r\n          { type: CHANNEL, msg: \"VISUAL_EDIT_MODE_ACK\", active: newMode },\r\n          \"*\"\r\n        );\r\n\r\n        if (!newMode) {\r\n          // already handled, flush too\r\n          // Flush image src change for current focus\r\n          flushImageSrcChange();\r\n\r\n          // Clean up any editing element\r\n          cleanupEditingElement();\r\n\r\n          // Clear image element reference\r\n          focusedImageElementRef.current = null;\r\n\r\n          // Clear everything when exiting visual edit mode\r\n          setHoverBox(null);\r\n          setHoverBoxes([]);\r\n          setFocusBox(null);\r\n          setFocusedElementId(null);\r\n          lastHitElementRef.current = null;\r\n          focusedElementRef.current = null;\r\n          hasStyleChangesRef.current = false;\r\n\r\n          setHoverTag(null);\r\n          setFocusTag(null);\r\n\r\n          // Notify parent that we've cleared the selection\r\n          const msg: ChildToParent = {\r\n            type: CHANNEL,\r\n            msg: \"HIT\",\r\n            id: null,\r\n            tag: null,\r\n            rect: null,\r\n          };\r\n          postMessageDedup(msg);\r\n        }\r\n      }\r\n\r\n      // Handle clear inline styles message\r\n      if (e.data.msg === \"CLEAR_INLINE_STYLES\" && \"elementId\" in e.data) {\r\n        // Find ALL elements with the same orchids ID\r\n        const allMatchingElements = document.querySelectorAll(\r\n          `[data-orchids-id=\"${e.data.elementId}\"]`\r\n        ) as NodeListOf<HTMLElement>;\r\n\r\n        allMatchingElements.forEach((element) => {\r\n          // Clear only the inline styles we track (typography, spacing, and background)\r\n          const stylesToClear = [\r\n            \"fontSize\",\r\n            \"color\",\r\n            \"fontWeight\",\r\n            \"fontStyle\",\r\n            \"textDecoration\",\r\n            \"textAlign\",\r\n            \"paddingLeft\",\r\n            \"paddingRight\",\r\n            \"paddingTop\",\r\n            \"paddingBottom\",\r\n            \"marginLeft\",\r\n            \"marginRight\",\r\n            \"marginTop\",\r\n            \"marginBottom\",\r\n            \"backgroundColor\",\r\n            \"backgroundImage\",\r\n          ];\r\n\r\n          stylesToClear.forEach((prop) => {\r\n            (element.style as any)[prop] = \"\";\r\n          });\r\n        });\r\n\r\n        // Clear from our tracking\r\n        appliedStylesRef.current.delete(e.data.elementId);\r\n      }\r\n\r\n      // Handle show element hover message\r\n      if (e.data.msg === \"SHOW_ELEMENT_HOVER\" && \"elementId\" in e.data) {\r\n        const { elementId } = e.data;\r\n\r\n        if (!elementId) {\r\n          // Clear hover boxes if no element ID\r\n          setHoverBoxes([]);\r\n          setHoverTag(null);\r\n          return;\r\n        }\r\n\r\n        // Find ALL elements with the same orchids ID\r\n        const allMatchingElements = document.querySelectorAll(\r\n          `[data-orchids-id=\"${elementId}\"]`\r\n        ) as NodeListOf<HTMLElement>;\r\n\r\n        if (allMatchingElements.length > 0) {\r\n          const boxes: Box[] = [];\r\n          let tagName = \"\";\r\n\r\n          allMatchingElements.forEach((element) => {\r\n            // Skip if this element is the focused one\r\n            if (element === focusedElementRef.current) {\r\n              return;\r\n            }\r\n\r\n            const rect = element.getBoundingClientRect();\r\n            boxes.push(expandBox(rect));\r\n\r\n            if (!tagName) {\r\n              tagName =\r\n                element.getAttribute(\"data-orchids-name\") ||\r\n                element.tagName.toLowerCase();\r\n            }\r\n          });\r\n\r\n          // Set hover boxes for all matching elements\r\n          setHoverBoxes(boxes);\r\n          setHoverTag(boxes.length > 0 ? tagName : null);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Handle scroll events to update hover box position\r\n    function onScroll() {\r\n      if (isResizingRef.current) return;\r\n      // Only update hover box if visual edit mode is active\r\n      if (!isVisualEditModeRef.current) return;\r\n\r\n      // Hide hover boxes while scrolling\r\n      setIsScrolling(true);\r\n      setHoverBox(null);\r\n      setHoverBoxes([]);\r\n\r\n      // Notify parent that scrolling has started\r\n      const scrollMsg: ChildToParent = {\r\n        type: CHANNEL,\r\n        msg: \"SCROLL_STARTED\",\r\n      };\r\n      postMessageDedup(scrollMsg);\r\n\r\n      // Reset the notification flag after scrolling stops\r\n      if (scrollTimeoutRef.current) {\r\n        clearTimeout(scrollTimeoutRef.current);\r\n      }\r\n      scrollTimeoutRef.current = window.setTimeout(() => {\r\n        setIsScrolling(false);\r\n        const scrollStopMsg: ChildToParent = {\r\n          type: CHANNEL,\r\n          msg: \"SCROLL_STOPPED\",\r\n        };\r\n        postMessageDedup(scrollStopMsg);\r\n      }, 16); // One frame (16ms) for instant restoration\r\n    }\r\n\r\n    // Add event listeners\r\n    document.addEventListener(\"pointermove\", onPointerMove, { passive: true });\r\n    document.addEventListener(\"pointerleave\", onPointerLeave);\r\n    document.addEventListener(\"mousedown\", onMouseDownCapture, {\r\n      capture: true,\r\n    });\r\n    document.addEventListener(\"click\", onClickCapture, { capture: true });\r\n    window.addEventListener(\"message\", onMsg);\r\n    window.addEventListener(\"scroll\", onScroll, true);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"pointermove\", onPointerMove);\r\n      document.removeEventListener(\"pointerleave\", onPointerLeave);\r\n      document.removeEventListener(\"mousedown\", onMouseDownCapture, true);\r\n      document.removeEventListener(\"click\", onClickCapture, true);\r\n      window.removeEventListener(\"message\", onMsg);\r\n      window.removeEventListener(\"scroll\", onScroll, true);\r\n      if (scrollTimeoutRef.current) clearTimeout(scrollTimeoutRef.current);\r\n    };\r\n  }, [focusedElementId, isResizing]); // Added focusedElementId and isResizing as dependencies\r\n\r\n  return (\r\n    <>\r\n      {/* Hover box - shows on hover with blue overlay */}\r\n      {isVisualEditMode && !isResizing && (\r\n        <>\r\n          {/* Render all hover boxes for elements with same ID */}\r\n          {hoverBoxes\r\n            .filter((box): box is NonNullable<Box> => box !== null)\r\n            .map((box, index) => (\r\n              <div key={index}>\r\n                <div\r\n                  className=\"fixed pointer-events-none border-[0.5px] border-[#38bdf8] bg-blue-200/20 border-dashed rounded-sm\"\r\n                  style={{\r\n                    zIndex: 100000,\r\n                    left: box.left,\r\n                    top: box.top,\r\n                    width: box.width,\r\n                    height: box.height,\r\n                  }}\r\n                />\r\n                {/* Tag label on each hover box */}\r\n                {hoverTag && (\r\n                  <div\r\n                    className=\"fixed pointer-events-none text-[10px] text-white bg-[#38bdf8] px-1 py-0.5 rounded-sm\"\r\n                    style={{\r\n                      zIndex: 100001,\r\n                      left: box.left,\r\n                      top: box.top - 20,\r\n                    }}\r\n                  >\r\n                    {hoverTag}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n        </>\r\n      )}\r\n\r\n      {/* Focus box - shows on click with just border, no overlay */}\r\n      {isVisualEditMode && focusBox && (\r\n        <>\r\n          {focusTag && (\r\n            <div\r\n              className=\"fixed text-[10px] font-semibold text-white bg-[#3b82f6] px-1 rounded-sm pointer-events-none select-none\"\r\n              style={{\r\n                zIndex: 100003,\r\n                left: focusBox.left - 4,\r\n                top: focusBox.top - 16,\r\n              }}\r\n            >\r\n              {focusTag}\r\n            </div>\r\n          )}\r\n\r\n          <div\r\n            className=\"fixed pointer-events-none border-[1.5px] border-[#38bdf8] rounded-sm\"\r\n            style={{\r\n              zIndex: 100001,\r\n              left: focusBox.left,\r\n              top: focusBox.top,\r\n              width: focusBox.width,\r\n              height: focusBox.height,\r\n            }}\r\n          />\r\n\r\n          {/* Resize handles */}\r\n          {!isResizing && (\r\n            <>\r\n              {/* Corner handles */}\r\n              <div\r\n                className=\"fixed w-2 h-2 bg-[#38bdf8] rounded-full cursor-nw-resize pointer-events-auto resize-handle\"\r\n                style={{\r\n                  zIndex: 100002,\r\n                  left: focusBox.left - 4,\r\n                  top: focusBox.top - 4,\r\n                }}\r\n                onMouseDown={(e) => handleResizeStart(e, \"nw\")}\r\n              />\r\n              <div\r\n                className=\"fixed w-2 h-2 bg-[#38bdf8] rounded-full cursor-ne-resize pointer-events-auto resize-handle\"\r\n                style={{\r\n                  zIndex: 100002,\r\n                  left: focusBox.left + focusBox.width - 4,\r\n                  top: focusBox.top - 4,\r\n                }}\r\n                onMouseDown={(e) => handleResizeStart(e, \"ne\")}\r\n              />\r\n              <div\r\n                className=\"fixed w-2 h-2 bg-[#38bdf8] rounded-full cursor-sw-resize pointer-events-auto resize-handle\"\r\n                style={{\r\n                  zIndex: 100002,\r\n                  left: focusBox.left - 4,\r\n                  top: focusBox.top + focusBox.height - 4,\r\n                }}\r\n                onMouseDown={(e) => handleResizeStart(e, \"sw\")}\r\n              />\r\n              <div\r\n                className=\"fixed w-2 h-2 bg-[#38bdf8] rounded-full cursor-se-resize pointer-events-auto resize-handle\"\r\n                style={{\r\n                  zIndex: 100002,\r\n                  left: focusBox.left + focusBox.width - 4,\r\n                  top: focusBox.top + focusBox.height - 4,\r\n                }}\r\n                onMouseDown={(e) => handleResizeStart(e, \"se\")}\r\n              />\r\n\r\n              {/* Edge handles */}\r\n              <div\r\n                className=\"fixed w-2 h-2 bg-[#38bdf8] rounded-full cursor-n-resize pointer-events-auto resize-handle\"\r\n                style={{\r\n                  zIndex: 100002,\r\n                  left: focusBox.left + focusBox.width / 2 - 4,\r\n                  top: focusBox.top - 4,\r\n                }}\r\n                onMouseDown={(e) => handleResizeStart(e, \"n\")}\r\n              />\r\n              <div\r\n                className=\"fixed w-2 h-2 bg-[#38bdf8] rounded-full cursor-s-resize pointer-events-auto resize-handle\"\r\n                style={{\r\n                  zIndex: 100002,\r\n                  left: focusBox.left + focusBox.width / 2 - 4,\r\n                  top: focusBox.top + focusBox.height - 4,\r\n                }}\r\n                onMouseDown={(e) => handleResizeStart(e, \"s\")}\r\n              />\r\n              <div\r\n                className=\"fixed w-2 h-2 bg-[#38bdf8] rounded-full cursor-w-resize pointer-events-auto resize-handle\"\r\n                style={{\r\n                  zIndex: 100002,\r\n                  left: focusBox.left - 4,\r\n                  top: focusBox.top + focusBox.height / 2 - 4,\r\n                }}\r\n                onMouseDown={(e) => handleResizeStart(e, \"w\")}\r\n              />\r\n              <div\r\n                className=\"fixed w-2 h-2 bg-[#38bdf8] rounded-full cursor-e-resize pointer-events-auto resize-handle\"\r\n                style={{\r\n                  zIndex: 100002,\r\n                  left: focusBox.left + focusBox.width - 4,\r\n                  top: focusBox.top + focusBox.height / 2 - 4,\r\n                }}\r\n                onMouseDown={(e) => handleResizeStart(e, \"e\")}\r\n              />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1658, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/saksham/OneDrive/Desktop/Tesseract/shield-tesseract-access-portal/src/components/ErrorReporter.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useRef } from \"react\";\r\n\r\ntype ReporterProps = {\r\n  /*  ⎯⎯ props are only provided on the global-error page ⎯⎯ */\r\n  error?: Error & { digest?: string };\r\n  reset?: () => void;\r\n};\r\n\r\nexport default function ErrorReporter({ error, reset }: ReporterProps) {\r\n  /* ─ instrumentation shared by every route ─ */\r\n  const lastOverlayMsg = useRef(\"\");\r\n  const pollRef = useRef<NodeJS.Timeout>();\r\n\r\n  useEffect(() => {\r\n    const inIframe = window.parent !== window;\r\n    if (!inIframe) return;\r\n\r\n    const send = (payload: unknown) => window.parent.postMessage(payload, \"*\");\r\n\r\n    const onError = (e: ErrorEvent) =>\r\n      send({\r\n        type: \"ERROR_CAPTURED\",\r\n        error: {\r\n          message: e.message,\r\n          stack: e.error?.stack,\r\n          filename: e.filename,\r\n          lineno: e.lineno,\r\n          colno: e.colno,\r\n          source: \"window.onerror\",\r\n        },\r\n        timestamp: Date.now(),\r\n      });\r\n\r\n    const onReject = (e: PromiseRejectionEvent) =>\r\n      send({\r\n        type: \"ERROR_CAPTURED\",\r\n        error: {\r\n          message: e.reason?.message ?? String(e.reason),\r\n          stack: e.reason?.stack,\r\n          source: \"unhandledrejection\",\r\n        },\r\n        timestamp: Date.now(),\r\n      });\r\n\r\n    const pollOverlay = () => {\r\n      const overlay = document.querySelector(\"[data-nextjs-dialog-overlay]\");\r\n      const node =\r\n        overlay?.querySelector(\r\n          \"h1, h2, .error-message, [data-nextjs-dialog-body]\"\r\n        ) ?? null;\r\n      const txt = node?.textContent ?? node?.innerHTML ?? \"\";\r\n      if (txt && txt !== lastOverlayMsg.current) {\r\n        lastOverlayMsg.current = txt;\r\n        send({\r\n          type: \"ERROR_CAPTURED\",\r\n          error: { message: txt, source: \"nextjs-dev-overlay\" },\r\n          timestamp: Date.now(),\r\n        });\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"error\", onError);\r\n    window.addEventListener(\"unhandledrejection\", onReject);\r\n    pollRef.current = setInterval(pollOverlay, 1000);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"error\", onError);\r\n      window.removeEventListener(\"unhandledrejection\", onReject);\r\n      pollRef.current && clearInterval(pollRef.current);\r\n    };\r\n  }, []);\r\n\r\n  /* ─ extra postMessage when on the global-error route ─ */\r\n  useEffect(() => {\r\n    if (!error) return;\r\n    window.parent.postMessage(\r\n      {\r\n        type: \"global-error-reset\",\r\n        error: {\r\n          message: error.message,\r\n          stack: error.stack,\r\n          digest: error.digest,\r\n          name: error.name,\r\n        },\r\n        timestamp: Date.now(),\r\n        userAgent: navigator.userAgent,\r\n      },\r\n      \"*\"\r\n    );\r\n  }, [error]);\r\n\r\n  /* ─ ordinary pages render nothing ─ */\r\n  if (!error) return null;\r\n\r\n  /* ─ global-error UI ─ */\r\n  return (\r\n    <html>\r\n      <body className=\"min-h-screen bg-background text-foreground flex items-center justify-center p-4\">\r\n        <div className=\"max-w-md w-full text-center space-y-6\">\r\n          <div className=\"space-y-2\">\r\n            <h1 className=\"text-2xl font-bold text-destructive\">\r\n              Something went wrong!\r\n            </h1>\r\n            <p className=\"text-muted-foreground\">\r\n              An unexpected error occurred. Please try again fixing with Orchids\r\n            </p>\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            {process.env.NODE_ENV === \"development\" && (\r\n              <details className=\"mt-4 text-left\">\r\n                <summary className=\"cursor-pointer text-sm text-muted-foreground hover:text-foreground\">\r\n                  Error details\r\n                </summary>\r\n                <pre className=\"mt-2 text-xs bg-muted p-2 rounded overflow-auto\">\r\n                  {error.message}\r\n                  {error.stack && (\r\n                    <div className=\"mt-2 text-muted-foreground\">\r\n                      {error.stack}\r\n                    </div>\r\n                  )}\r\n                  {error.digest && (\r\n                    <div className=\"mt-2 text-muted-foreground\">\r\n                      Digest: {error.digest}\r\n                    </div>\r\n                  )}\r\n                </pre>\r\n              </details>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAUe,SAAS,cAAc,EAAE,KAAK,EAAE,KAAK,EAAiB;IACnE,6CAA6C,GAC7C,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE;IAC9B,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD;IAErB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,WAAW,OAAO,MAAM,KAAK;QACnC,IAAI,CAAC,UAAU;QAEf,MAAM,OAAO,CAAC,UAAqB,OAAO,MAAM,CAAC,WAAW,CAAC,SAAS;QAEtE,MAAM,UAAU,CAAC,IACf,KAAK;gBACH,MAAM;gBACN,OAAO;oBACL,SAAS,EAAE,OAAO;oBAClB,OAAO,EAAE,KAAK,EAAE;oBAChB,UAAU,EAAE,QAAQ;oBACpB,QAAQ,EAAE,MAAM;oBAChB,OAAO,EAAE,KAAK;oBACd,QAAQ;gBACV;gBACA,WAAW,KAAK,GAAG;YACrB;QAEF,MAAM,WAAW,CAAC,IAChB,KAAK;gBACH,MAAM;gBACN,OAAO;oBACL,SAAS,EAAE,MAAM,EAAE,WAAW,OAAO,EAAE,MAAM;oBAC7C,OAAO,EAAE,MAAM,EAAE;oBACjB,QAAQ;gBACV;gBACA,WAAW,KAAK,GAAG;YACrB;QAEF,MAAM,cAAc;YAClB,MAAM,UAAU,SAAS,aAAa,CAAC;YACvC,MAAM,OACJ,SAAS,cACP,wDACG;YACP,MAAM,MAAM,MAAM,eAAe,MAAM,aAAa;YACpD,IAAI,OAAO,QAAQ,eAAe,OAAO,EAAE;gBACzC,eAAe,OAAO,GAAG;gBACzB,KAAK;oBACH,MAAM;oBACN,OAAO;wBAAE,SAAS;wBAAK,QAAQ;oBAAqB;oBACpD,WAAW,KAAK,GAAG;gBACrB;YACF;QACF;QAEA,OAAO,gBAAgB,CAAC,SAAS;QACjC,OAAO,gBAAgB,CAAC,sBAAsB;QAC9C,QAAQ,OAAO,GAAG,YAAY,aAAa;QAE3C,OAAO;YACL,OAAO,mBAAmB,CAAC,SAAS;YACpC,OAAO,mBAAmB,CAAC,sBAAsB;YACjD,QAAQ,OAAO,IAAI,cAAc,QAAQ,OAAO;QAClD;IACF,GAAG,EAAE;IAEL,wDAAwD,GACxD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,OAAO;QACZ,OAAO,MAAM,CAAC,WAAW,CACvB;YACE,MAAM;YACN,OAAO;gBACL,SAAS,MAAM,OAAO;gBACtB,OAAO,MAAM,KAAK;gBAClB,QAAQ,MAAM,MAAM;gBACpB,MAAM,MAAM,IAAI;YAClB;YACA,WAAW,KAAK,GAAG;YACnB,WAAW,UAAU,SAAS;QAChC,GACA;IAEJ,GAAG;QAAC;KAAM;IAEV,qCAAqC,GACrC,IAAI,CAAC,OAAO,OAAO;IAEnB,uBAAuB,GACvB,qBACE,8OAAC;kBACC,cAAA,8OAAC;YAAK,WAAU;sBACd,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAsC;;;;;;0CAGpD,8OAAC;gCAAE,WAAU;0CAAwB;;;;;;;;;;;;kCAIvC,8OAAC;wBAAI,WAAU;kCACZ,oDAAyB,+BACxB,8OAAC;4BAAQ,WAAU;;8CACjB,8OAAC;oCAAQ,WAAU;8CAAqE;;;;;;8CAGxF,8OAAC;oCAAI,WAAU;;wCACZ,MAAM,OAAO;wCACb,MAAM,KAAK,kBACV,8OAAC;4CAAI,WAAU;sDACZ,MAAM,KAAK;;;;;;wCAGf,MAAM,MAAM,kBACX,8OAAC;4CAAI,WAAU;;gDAA6B;gDACjC,MAAM,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAW3C","debugId":null}}]
}